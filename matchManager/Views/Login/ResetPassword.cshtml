@model matchManager.Models.ViewModels.ResetPassword

@{
    ViewBag.Title = "ResetPassword";
    Layout = null;
}

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>SB Admin - Register</title>

    <!-- Custom fonts for this template-->
    <link href="~/Content/assets/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">

    <!-- Custom styles for this template-->
    <link href="~/Content/assets/css/sb-admin.css" rel="stylesheet">

</head>

@using (Html.BeginForm())
{
    <body class="bg-dark">
        @Html.AntiForgeryToken()
        <div class="container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="card card-register mx-auto mt-5">
                <div class="card-header">Reset Password</div>
                <div class="card-body">
                    <form id="Registration" action="/Login/ResetPassword">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @for = "Password" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", @id = "Password" } })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @for = "ConfirmPassword" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @id = "ConfirmPassword" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.HiddenFor(a => a.ResetCode)
                        </div>

                        <div class="text-success">
                            @ViewBag.message
                        </div>

                        <button class="btn btn-primary btn-block" formmethod="post" type="submit">Reset Password</button>
                    </form>
                </div>
            </div>           
        </div>
    </body>
 
}

